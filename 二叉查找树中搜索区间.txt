class Solution {
    public:
        /**
         * @param root: param root: The root of the binary search tree
         * @param k1: An integer
         * @param k2: An integer
         * @return: return: Return all keys that k1<=key<=k2 in ascending order
         */
        vector<int> searchRange(TreeNode * root, int k1, int k2) {
            // write your code here
            vector<int> res;  
            helper(root,k1,k2,res);  
            return res;  
        }  
        void helper(TreeNode* root,int k1,int k2,vector<int>&res){  
            if(root==NULL) return;  
            if(root->val<=k2&&root->val>=k1){  
                helper(root->left,k1,k2,res);  
                res.push_back(root->val);  
                helper(root->right,k1,k2,res);  
            }   
            else if(root->val>k2) helper(root->left,k1,k2,res);  
            else helper(root->right,k1,k2,res);  
        }
    };